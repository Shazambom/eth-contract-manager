// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: signingEvent.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Abi             string   `protobuf:"bytes,1,opt,name=abi,proto3" json:"abi,omitempty"`
	Args            [][]byte `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	ArgNames        []string `protobuf:"bytes,3,rep,name=arg_names,json=argNames,proto3" json:"arg_names,omitempty"`
	SigningKey      string   `protobuf:"bytes,4,opt,name=signing_key,json=signingKey,proto3" json:"signing_key,omitempty"`
	ContractAddress string   `protobuf:"bytes,5,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Function        string   `protobuf:"bytes,6,opt,name=function,proto3" json:"function,omitempty"`
}

func (x *SignatureRequest) Reset() {
	*x = SignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signingEvent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureRequest) ProtoMessage() {}

func (x *SignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_signingEvent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureRequest.ProtoReflect.Descriptor instead.
func (*SignatureRequest) Descriptor() ([]byte, []int) {
	return file_signingEvent_proto_rawDescGZIP(), []int{0}
}

func (x *SignatureRequest) GetAbi() string {
	if x != nil {
		return x.Abi
	}
	return ""
}

func (x *SignatureRequest) GetArgs() [][]byte {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *SignatureRequest) GetArgNames() []string {
	if x != nil {
		return x.ArgNames
	}
	return nil
}

func (x *SignatureRequest) GetSigningKey() string {
	if x != nil {
		return x.SigningKey
	}
	return ""
}

func (x *SignatureRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *SignatureRequest) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

type BatchSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignatureRequests []*SignatureRequest `protobuf:"bytes,1,rep,name=signature_requests,json=signatureRequests,proto3" json:"signature_requests,omitempty"`
}

func (x *BatchSignatureRequest) Reset() {
	*x = BatchSignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signingEvent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSignatureRequest) ProtoMessage() {}

func (x *BatchSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_signingEvent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSignatureRequest.ProtoReflect.Descriptor instead.
func (*BatchSignatureRequest) Descriptor() ([]byte, []int) {
	return file_signingEvent_proto_rawDescGZIP(), []int{1}
}

func (x *BatchSignatureRequest) GetSignatureRequests() []*SignatureRequest {
	if x != nil {
		return x.SignatureRequests
	}
	return nil
}

type SignatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Hash      string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *SignatureResponse) Reset() {
	*x = SignatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signingEvent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureResponse) ProtoMessage() {}

func (x *SignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_signingEvent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureResponse.ProtoReflect.Descriptor instead.
func (*SignatureResponse) Descriptor() ([]byte, []int) {
	return file_signingEvent_proto_rawDescGZIP(), []int{2}
}

func (x *SignatureResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignatureResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type BatchSignatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignatureResponses []*SignatureResponse `protobuf:"bytes,1,rep,name=signature_responses,json=signatureResponses,proto3" json:"signature_responses,omitempty"`
}

func (x *BatchSignatureResponse) Reset() {
	*x = BatchSignatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signingEvent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSignatureResponse) ProtoMessage() {}

func (x *BatchSignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_signingEvent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSignatureResponse.ProtoReflect.Descriptor instead.
func (*BatchSignatureResponse) Descriptor() ([]byte, []int) {
	return file_signingEvent_proto_rawDescGZIP(), []int{3}
}

func (x *BatchSignatureResponse) GetSignatureResponses() []*SignatureResponse {
	if x != nil {
		return x.SignatureResponses
	}
	return nil
}

var File_signingEvent_proto protoreflect.FileDescriptor

var file_signingEvent_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbd, 0x01, 0x0a, 0x10, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x62, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x62, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a,
	0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22,
	0x45, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x5d, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x32, 0x87, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x6e,
	0x54, 0x78, 0x6e, 0x12, 0x11, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x78, 0x6e, 0x12, 0x16, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_signingEvent_proto_rawDescOnce sync.Once
	file_signingEvent_proto_rawDescData = file_signingEvent_proto_rawDesc
)

func file_signingEvent_proto_rawDescGZIP() []byte {
	file_signingEvent_proto_rawDescOnce.Do(func() {
		file_signingEvent_proto_rawDescData = protoimpl.X.CompressGZIP(file_signingEvent_proto_rawDescData)
	})
	return file_signingEvent_proto_rawDescData
}

var file_signingEvent_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_signingEvent_proto_goTypes = []interface{}{
	(*SignatureRequest)(nil),       // 0: SignatureRequest
	(*BatchSignatureRequest)(nil),  // 1: BatchSignatureRequest
	(*SignatureResponse)(nil),      // 2: SignatureResponse
	(*BatchSignatureResponse)(nil), // 3: BatchSignatureResponse
}
var file_signingEvent_proto_depIdxs = []int32{
	0, // 0: BatchSignatureRequest.signature_requests:type_name -> SignatureRequest
	2, // 1: BatchSignatureResponse.signature_responses:type_name -> SignatureResponse
	0, // 2: SigningService.SignTxn:input_type -> SignatureRequest
	1, // 3: SigningService.BatchSignTxn:input_type -> BatchSignatureRequest
	2, // 4: SigningService.SignTxn:output_type -> SignatureResponse
	3, // 5: SigningService.BatchSignTxn:output_type -> BatchSignatureResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_signingEvent_proto_init() }
func file_signingEvent_proto_init() {
	if File_signingEvent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_signingEvent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signingEvent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signingEvent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signingEvent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSignatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_signingEvent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_signingEvent_proto_goTypes,
		DependencyIndexes: file_signingEvent_proto_depIdxs,
		MessageInfos:      file_signingEvent_proto_msgTypes,
	}.Build()
	File_signingEvent_proto = out.File
	file_signingEvent_proto_rawDesc = nil
	file_signingEvent_proto_goTypes = nil
	file_signingEvent_proto_depIdxs = nil
}
