version: '3.8'
services:
  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb
    hostname: dynamodb
    restart: always
    ports:
      - "8000:8000"
    networks:
      - contract-service

  aws-cli:
    image: amazon/aws-cli
    depends_on:
      - dynamodb
    environment:
      AWS_ENDPOINT: --endpoint-url=http://dynamodb:8000
    entrypoint: /bin/sh -c
    networks:
      - contract-service
    command: >
      '
      echo "########### Creating profile ###########" &&
      aws configure set aws_access_key_id xxx &&
      aws configure set aws_secret_access_key yyy &&
      aws configure set region us-east-1 &&

      echo "########### Listing profile ###########" &&
      aws configure list &&

      set -x &&

      echo "Constructing Contract Table" &&
      aws --endpoint-url=http://dynamodb:8000 \
          dynamodb create-table \
            --region us-east-1 \
            --table-name Contracts \
            --attribute-definitions \
              AttributeName=Address,AttributeType=S \
              AttributeName=ContractOwner,AttributeType=S \
            --key-schema AttributeName=Address,KeyType=HASH \
            --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
            --global-secondary-indexes \
                  "[
                    {
                      \"IndexName\": \"ContractOwner\",
                      \"KeySchema\": [{\"AttributeName\":\"ContractOwner\",\"KeyType\":\"HASH\"}],
                      \"Projection\":{
                          \"ProjectionType\":\"ALL\"
                      },
                       \"ProvisionedThroughput\": {
                          \"ReadCapacityUnits\": 5,
                          \"WriteCapacityUnits\": 5
                      }
                    }
                  ]" &&

      aws --endpoint-url=http://dynamodb:8000 \
          dynamodb describe-table --region us-east-1  --table-name Contracts --output table &&

      echo "Constructing Private Key Table" &&
      aws --endpoint-url=http://dynamodb:8000 \
          dynamodb create-table \
            --region us-east-1 \
            --table-name ContractPrivateKeyRepository \
            --attribute-definitions \
              AttributeName=ContractAddress,AttributeType=S \
            --key-schema AttributeName=ContractAddress,KeyType=HASH \
            --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 &&

      aws --endpoint-url=http://dynamodb:8000 \
          dynamodb describe-table --table-name ContractPrivateKeyRepository --output table --region us-east-1 &&

      aws --endpoint-url=http://dynamodb:8000 \
          dynamodb create-table \
            --region us-east-1 \
            --table-name Transactions \
            --attribute-definitions \
              AttributeName=user_address,AttributeType=S \
              AttributeName=hash,AttributeType=S \
            --key-schema \
              AttributeName=user_address,KeyType=HASH \
              AttributeName=hash,KeyType=RANGE \
            --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \
            --global-secondary-indexes \
                  "[
                    {
                      \"IndexName\": \"user_address\",
                      \"KeySchema\": [{\"AttributeName\":\"user_address\",\"KeyType\":\"HASH\"}],
                      \"Projection\":{
                          \"ProjectionType\":\"ALL\"
                      },
                       \"ProvisionedThroughput\": {
                          \"ReadCapacityUnits\": 5,
                          \"WriteCapacityUnits\": 5
                      }
                    }
                  ]" &&

      aws --endpoint-url=http://dynamodb:8000 \
          dynamodb describe-table --table-name Transactions --output table --region us-east-1 &&

      aws --endpoint-url=http://dynamodb:8000 \
          dynamodb list-tables --region us-east-1 &&

      set +x
      '


  signer:
    image: signer:latest
    restart: always
    environment:
      TABLE_NAME: "ContractPrivateKeyRepository"
      AWS_ENDPOINT: "dynamodb:8000"
      AWS_REGION: "us-east-1"
      AWS_ACCESS_KEY_ID: "xxx"
      AWS_SECRET_ACCESS_KEY: "yyy"
      SSL_ENABLED: "false"
      PORT: 8081
    ports:
      - "8081:8081"
    networks:
      - contract-service
    depends_on:
      dynamodb:
        condition: service_started
      aws-cli:
        condition: service_started
    healthcheck:
      test: [ "CMD", "/bin/grpc_health_probe", "-addr=localhost:8081", "-v", "-service=SignerService"]
      interval: 2s
      timeout: 2s
      start_period: 1s

  contract-manager:
    image: contract-manager:latest
    restart: always
    environment:
      TABLE_NAME: "Contracts"
      AWS_ENDPOINT: "dynamodb:8000"
      AWS_REGION: "us-east-1"
      AWS_ACCESS_KEY_ID: "xxx"
      AWS_SECRET_ACCESS_KEY: "yyy"
      SSL_ENABLED: "false"
      PORT: 8082
    ports:
      - "8082:8082"
    networks:
      - contract-service
    depends_on:
      dynamodb:
        condition: service_started
      aws-cli:
        condition: service_started
    healthcheck:
      test: [ "CMD", "/bin/grpc_health_probe", "-addr=localhost:8082", "-v", "-service=ContractManagementService"]
      interval: 2s
      timeout: 2s
      start_period: 1s

  transaction-manager:
    image: transaction-manager:latest
    restart: always
    environment:
      CONTRACT_TABLE_NAME: "Contracts"
      TRANSACTION_TABLE_NAME: "Transactions"
      SIGNER_HOST: "signer:8081"
      AWS_REGION: "us-east-1"
      AWS_ENDPOINT: "dynamodb:8000"
      AWS_ACCESS_KEY_ID: "xxx"
      AWS_SECRET_ACCESS_KEY: "yyy"
      SSL_ENABLED: "false"
      PORT: 8083
    ports:
      - "8083:8083"
    networks:
      - contract-service
    depends_on:
      dynamodb:
        condition: service_started
      signer:
        condition: service_healthy
      aws-cli:
        condition: service_started
    healthcheck:
      test: [ "CMD", "/bin/grpc_health_probe", "-addr=localhost:8083", "-v", "-service=TransactionService"]
      interval: 2s
      timeout: 2s
      start_period: 1s


  web:
    image: contract-web:latest
    restart: always
    environment:
      PORT: 8084
      ALIVE_PORT: 8080
      TXN_HOST: "transaction-manager:8083"
    ports:
      - "8084:8084"
    networks:
      - contract-service
    depends_on:
      contract-manager:
        condition: service_healthy
      signer:
        condition: service_healthy
      transaction-manager:
        condition: service_healthy

  api:
    image: contract-api:latest
    restart: always
    environment:
      TXN_HOST: "transaction-manager:8083"
      PORT: 8085
    ports:
      - "8085:8085"
    networks:
      - contract-service
    depends_on:
      contract-manager:
        condition: service_healthy
      signer:
        condition: service_healthy
      transaction-manager:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "/bin/grpc_health_probe", "-addr=localhost:8085", "-v", "-service=ContractIntegrationService"]
      interval: 2s
      timeout: 2s
      start_period: 1s



networks:
  contract-service: {}
