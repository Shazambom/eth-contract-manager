syntax = "proto3";


option go_package = "./;pb";


message Address {
    string address = 1;
}

message Owner {
    string owner = 1;
}

message AddressOwner {
    string address = 1;
    string owner = 2;
}

message Contract {
    string address = 1;
    string abi = 2;
    repeated string functions = 3;
    int64 max_mintable = 4;
    int64 max_increment = 5;
    string owner = 6;
}

message TransactionRequest {
    string message_sender = 1;
    string function_name = 2;
    int64 num_requested = 3;
    repeated string args = 4;
    Contract contract = 5;
}

message Error {
    string err = 1;
}

message Contracts {
    repeated Contract contracts = 1;
}

message SignatureRequest {
    repeated bytes args = 1;
    string contract_address = 2;
}

message BatchSignatureRequest {
    repeated SignatureRequest signature_requests = 1;
}

message SignatureResponse {
    string signature = 1;
    string hash = 2;
}

message BatchSignatureResponse {
    repeated SignatureResponse signature_responses = 1;
}

message KeyManagementRequest {
    string contract_address = 1;
}

message KeyManagementResponse {
    string contract_address = 1;
    string public_key = 2;
}

service SigningService {
    rpc SignTxn(SignatureRequest) returns (SignatureResponse) {}
    rpc BatchSignTxn(BatchSignatureRequest) returns (BatchSignatureResponse) {}
    rpc GenerateNewKey(KeyManagementRequest) returns (KeyManagementResponse) {}
    rpc DeleteKey(KeyManagementRequest) returns (KeyManagementResponse) {}
    rpc GetKey(KeyManagementRequest) returns (KeyManagementResponse) {}
}

service TransactionService {
    rpc GetContract(Address) returns(Contract) {}
    rpc ConstructTransaction(TransactionRequest) returns (Error) {}
}

service ContractManagement {
    rpc Get(Address) returns(Contract) {}
    rpc Store(Contract) returns (Error) {}
    rpc Delete(AddressOwner) returns (Error) {}
    rpc List(Owner) returns (Contracts) {}
}